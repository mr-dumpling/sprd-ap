客制化代码结构&编译命令 ：
1.客制化代码结构：
  MocorDroid6.0_Trunk_16b 
         |
         | --->idh.code (展讯基线版本，不能修改)
         | --->lentek   
         |        |--->idh.code    (我们修改过的文件)
         |        |--->3200 (项目名)
         |                 |--->share
         |                 |        |--->idh.code (项目共用文件)
         |                 |        |--->image (不参加编辑的镜像文件)
         |                 |        |       |--->... 
         |                 |        |--->pcb0(x) (PCB版本共用文件)
         |                 |                |--->idh.code (同一PCB版本共用文件)
         |                 |        |--->project.conf (项目配置文件)
         |                 |--->ltk01a  (客户名+PCB版本+客户的客户名)
         |                          |--->idh.code (客制化文件)
         |                          |--->lentek.conf  (客制化配置文件)
         | --->modem 
         |        | --->CP0&&CP1 (CP0 & CP1的NV工程)
         |        |        | --->FM_BASE_15C_PIKEL_W16.36.5-15_48 
         |        |        |        | --->pikel_tddcsfb_3592_openphone_builddir 
         |        |        |        | --->pikel_tddcsfb_3592_V10_builddir 
         |        |        |        | --->..
         | --->tools
|        | --->NVEDITOR (nv编辑器)
|        | --->ResearchDownload (研发下载工具)
|        | --->...
| --->version_info.txt   (记录详细版本号及升级过的PatchID)                                         
     
.编译命令： 
    ---进入idh.code ，第一次pull或者checkout出来的代码，先要执行premake命令，成功后再执行make命令：
       1）,eng版本： source ./premake ../lentek/项目目录名/客户名目录名 + -e
            user版本： source ./premake  ../lentek/项目目录名/客户名目录名 + -u
   userdebug版本： source ./premake  ../lentek/项目目录名/客户名目录名 + -d
            例如：source ./preview ../lentek/3200/ltk01a  -d 
 
       2), 全编：make -j(N) 2>&1 | tee build.log
            常用编译命令： 
            make -j(N) bootloader                  -- Build spl and u-boot 
            make -j(N) bootimage                  -- Build kernel and ramdisk 
            make -j(N) systemimage              -- Build system.img 
            make -j(N) userdataimage           -- Build userdata.img 
            make -j(N) recoveryimage            -- Build recovery.img
